name: "[ruff] Release"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The version to tag, without the leading 'v'. If omitted, will initiate a dry run (no uploads)."
        type: string
      sha:
        description: "The full sha of the commit to be released. If omitted, the latest commit on the default branch will be used."
        default: ""
        type: string
  pull_request:
    paths:
      # When we change pyproject.toml, we want to ensure that the maturin builds still work
      - pyproject.toml
      # And when we change this workflow itself...
      - .github/workflows/release.yaml

jobs:
  publish-release:
    name: Publish to GitHub
    runs-on: ubuntu-latest
    # If you don't set an input tag, it's a dry run (no uploads).
    if: ${{ inputs.tag }}
    permissions:
      # For GitHub release publishing
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: binaries
      - name: "Publish to GitHub"
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: v${{ inputs.tag }}

  push-to-registry:
    # This action doesn't depend on anything, it's easy to re-tag if something failed
    name: "Push Docker image to Docker Hub"
    runs-on: "ubuntu-latest"
    environment:
      name: release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      - name: "Get tag"
        id: "get-tag"
        shell: "bash"
        run: |
          echo PKG_VERSION=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name=="ruff_cli") | .version') >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Extract metadata (tags, labels) for Docker"
        id: "meta"
        uses: "docker/metadata-action@v4"
        with:
          images: ghcr.io/konstin/release-testing2

      - name: "Build and push Docker image"
        uses: "docker/build-push-action@v3"
        with:
          context: .
          push: ${{ inputs.tag != '' }}
          tags: ghcr.io/konstin/release-testing2:latest,ghcr.io/konstin/release-testing2:${{ steps.get-tag.outputs.PKG_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
